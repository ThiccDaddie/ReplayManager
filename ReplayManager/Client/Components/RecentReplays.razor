@using ThiccDaddie.ReplayManager.Shared
@using System.Linq
@using Microsoft.AspNetCore.SignalR.Client
@using Newtonsoft.Json
@using ThiccDaddie.ReplayManager.Client.Services;
@using System.ComponentModel;

@inject ReplayService ReplayService
@inject HttpClient Http

@implements IDisposable

@if (recentReplayInfos != null)
{
	<ReplayList Replays="@recentReplayInfos"></ReplayList>}
else if (!string.IsNullOrEmpty(errorMessage))
{
	<MatHeadline6>@errorMessage</MatHeadline6>}

@code { private string errorMessage;
	private List<ReplayInfo> recentReplayInfos = new List<ReplayInfo>();

	protected override void OnInitialized()
	{
		ReplayService.PropertyChanged += HandleReplayServiceRecentReplayInfosChangedEvent;
	}

	public void HandleReplayServiceRecentReplayInfosChangedEvent(object sender, PropertyChangedEventArgs e)
	{
		if (e.PropertyName == nameof(ReplayService.RecentReplayInfos))
		{
			recentReplayInfos = ReplayService.RecentReplayInfos;
			StateHasChanged();
		}
	}

	public void Dispose()
	{
		ReplayService.PropertyChanged -= HandleReplayServiceRecentReplayInfosChangedEvent;
	} }
