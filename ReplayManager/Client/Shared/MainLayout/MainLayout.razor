@using ThiccDaddie.ReplayManager.Client.Services
@using System.ComponentModel;
@inject ReplayService ReplayService

@inherits LayoutComponentBase
@namespace ThiccDaddie.ReplayManager.Client.Shared

<MatDrawerContainer Style="width: 100vw; height: 100vh;" Class="full mat">
	<MatDrawer Opened="true" Style="border-right: solid 1px rgb(224, 224, 224);">
		<div style=" display: flex; flex-direction: column;">
			<header style="padding: 5%; display: flex; justify-content: center;">
				<div style="width: 50%;">
					<img alt="Blazor Boilerplate" style="width: 100%; height: auto; border-radius: 50%;------------------------------------------------**-----------*/" src="/images/Josh_Stream.jpg" title="Blazor Boilerplate">
					@*<a class="miniHover" href="/">Blazor Boilerplate</a>*@
				</div>
			</header>
			<NavMenu />
			<footer style="padding: 5px 0 5px 0;">
				<MatProgressBar Progress="@((double)replaysLoaded.Current / replaysLoaded.Total)"></MatProgressBar>

			</footer>
		</div>
	</MatDrawer>
	<MatDrawerContent>
		@*<Breadcrumbs RootLinkTitle="Home"></Breadcrumbs>*@
		<section style="width: 100%; height: 100%; padding: 5%; box-sizing: border-box;">

			@Body
		</section>
		@*<footer class="page-footer">
				<div class="flex-1">
					© 2020 <a href="//blazorboilerplate.com">Blazor Boilerplate</a> Version 1.0.0 - Developed by <a href="https://keithfimreite.com" target="_blank">Enkode LLC</a>
				</div>
			</footer>*@
	</MatDrawerContent>
</MatDrawerContainer>

@code { private (int Current, int Total) replaysLoaded;

	protected override void OnInitialized()
	{
		ReplayService.PropertyChanged += HandleReplayServiceRecentReplayInfosChangedEvent;
	}

	public void HandleReplayServiceRecentReplayInfosChangedEvent(object sender, PropertyChangedEventArgs e)
	{
		if (e.PropertyName == nameof(ReplayService.ReplaysLoaded))
		{
			replaysLoaded = ReplayService.ReplaysLoaded;
			StateHasChanged();
		}
	}

	public void Dispose()
	{
		ReplayService.PropertyChanged -= HandleReplayServiceRecentReplayInfosChangedEvent;
	} }
