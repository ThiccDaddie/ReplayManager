<div class="main">
	<div class="title-image">
		<RoundTitleImage />
	</div>

	<MudText Typo="Typo.h6" Class="title">First time, huh? Where are your replays?</MudText>
	<div class="directories-picker-wrapper">
		<MudCard Class="directory-list">
			<MudText Typo="Typo.overline">pick from these...</MudText>
			<MudList>
				@foreach ((string path, int index) in FoundPaths
						.Where(path => !ChosenPaths.Contains(path))
						.Select((item, index) => (item, index)))
				{
					<MudListItem Style="display:flex; justify-content: space-between;">
						@path
						<MudIconButton Icon="@Icons.Material.Outlined.AddCircleOutline" OnClick="@(() => AddChosenPath(path))" />
					</MudListItem>
					@if (index < FoundPaths.Count - 1)
					{
						<MudDivider/>
					}}

			</MudList>
		</MudCard>

		<MudCard>
			
			<EditForm Model="@formModel" OnValidSubmit="@AddDirectory">
				<MatOverline Class="directory-picker-title">
					...or choose them manually like a scrub...
				</MatOverline>
				<p class="directory-picker">
					<MatStringField @bind-Value="formModel.Path"
									Icon="folder_open"
									Style="width: 350px;"
									IconTrailing="true"
									Label="Replays folder"
									IconOnClick="@ShowDirectoryDialog">
					</MatStringField>
					<ValidationMessage For="@(() => formModel.Path)" />
				</p>
				<CustomValidator @ref="@customValidator" />
				<p>
					<MatButton Outlined="true" Type="submit">Add</MatButton>
				</p>
			</EditForm>
		</MudCard>

		<MudCard Class="directory-list">
			<MudText Typo="Typo.overline">... and here they are!</MudText>
			<MudList>
				@foreach ((string path, int index) in ChosenPaths.Select((item, index) => (item, index)))
				{
					<MudListItem>
						@path
						<MudIconButton Icon="@Icons.Material.Outlined.RemoveCircleOutline" OnClick="@(() => RemoveChosenPath(path))" />
					</MudListItem>
				}
			</MudList>
		</MudCard>
	</div>
	<div class="footer">
		<MudButton Disabled="@(!ChosenPaths.Any() && !AllowSaveNoPaths)"
				   OnClick="@(() => OnFinish.InvokeAsync(ChosenPaths))"
				   Variant="Variant.Filled">
			Done
		</MudButton>
	</div>
</div>
